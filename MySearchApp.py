# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'interface.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import folium
import sys
import io
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWebEngineWidgets import QWebEngineView 
from PyQt5.QtWidgets import QApplication, QWidget, QHBoxLayout, QVBoxLayout


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(751, 658)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setLayoutDirection(QtCore.Qt.LeftToRight)
        MainWindow.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)

        # Layouts
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")

        # Text Inputs
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setObjectName("textEdit")
        self.horizontalLayout.addWidget(self.textEdit)

        # Buttons
        self.button_search = QtWidgets.QPushButton(self.centralwidget)
        self.button_search.setObjectName("button_search")
        self.horizontalLayout.addWidget(self.button_search)
        self.verticalLayout.addLayout(self.horizontalLayout)

        # Web view (map)
        self.webView = QWebEngineView()
        self.webView.setObjectName("webView")
        self.verticalLayout.addWidget(self.webView)

        # Progress Bar
        self.progressBar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBar.setProperty("value", 24)
        self.progressBar.setObjectName("progressBar")
        self.verticalLayout.addWidget(self.progressBar)
        self.verticalLayout.setStretch(0, 5)
        self.verticalLayout.setStretch(1, 90)
        self.verticalLayout.setStretch(2, 5)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 751, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        # mapbox://styles/jpfcabral/ckrjeq9rj0lmg17qpi2gd46ak
        # https://api.mapbox.com/styles/v1/jpfcabral/ckrjeq9rj0lmg17qpi2gd46ak.html?fresh=true&title=view&access_token=pk.eyJ1IjoianBmY2FicmFsIiwiYSI6ImNrcmo4ODVpejBpNmoybnFydnZ4aTBhajYifQ.XWYj4QQ5tXxiehs6ffR_Sg
        # Map initialization
        # m = folium.Map(tiles='Stamen Terrain', zoom_start=15, location=(-23.15441690888484, -50.940541830582795))
        m = folium.Map( location=(-16.34466097568524, -47.88722737976218),
                        zoom_start=20,
                        tiles='https://api.mapbox.com/styles/v1/jpfcabral/ckrjeq9rj0lmg17qpi2gd46ak/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoianBmY2FicmFsIiwiYSI6ImNrcmo4ODVpejBpNmoybnFydnZ4aTBhajYifQ.XWYj4QQ5tXxiehs6ffR_Sg',
                        attr='XXX Mapbox Attribution')
        data = io.BytesIO()
        m.save(data, close_file=False)
        self.webView.setHtml(data.getvalue().decode())
        # self.webView.setHtml('https://www.google.com/maps/@-5.8850813,-35.2038551,15z')



        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    # Names retranslate 
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MapSearchApp"))
        self.button_search.setText(_translate("MainWindow", "Search"))
    
    # Load new map view
    def loadMap(lat, lon, level):
        m = folium.Map(tiles='Stamen Terrain', zoom_start=15, location=(-5.888947323651743, -35.21097641464734))
        data = io.BytesIO()
        m.save(data, close_file=False)
        self.webView.setHtml(data.getvalue().decode())


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
